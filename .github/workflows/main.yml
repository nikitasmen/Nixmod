name: NixMod Main CI Workflow

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
    
# This ensures only one workflow per branch runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run NixOS system configuration CI
  nixmod-system-ci:
    name: NixOS System Configuration
    uses: ./.github/workflows/nixmod-system.yml
    secrets: inherit

  # Run dotfiles CI
  nixmod-dotfiles-ci:
    name: NixMod Dotfiles
    uses: ./.github/workflows/nixmod-dotfiles.yml
    secrets: inherit

  # Run toolkit CI
  toolkit-ci:
    name: NixMod Toolkit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test toolkit scripts
        run: |
          echo "Testing toolkit scripts..."
          chmod +x toolkit/*.sh
          
          # Test help commands
          ./toolkit/nixmod.sh help || true
          ./toolkit/helper.sh help || true
          ./toolkit/install-config.sh help || true
          ./toolkit/add-flake.sh --help || true
          
          echo "Toolkit scripts are executable and show help correctly"

      - name: Test toolkit functionality
        run: |
          echo "Testing toolkit functionality..."
          
          # Test flake initialization (dry run)
          cd toolkit
          ./nixmod.sh flake-init --help || true
          
          # Test add-flake functionality
          ./add-flake.sh --help || true
          
          echo "Toolkit functionality tests completed"

  # Overall status check
  status-check:
    name: Overall Status
    runs-on: ubuntu-latest
    needs: [nixmod-system-ci, nixmod-dotfiles-ci, toolkit-ci]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "NixMod System CI: ${{ needs.nixmod-system-ci.result }}"
          echo "NixMod Dotfiles CI: ${{ needs.nixmod-dotfiles-ci.result }}"
          echo "Toolkit CI: ${{ needs.toolkit-ci.result }}"
          
          if [[ "${{ needs.nixmod-system-ci.result }}" == "failure" || 
                "${{ needs.nixmod-dotfiles-ci.result }}" == "failure" || 
                "${{ needs.toolkit-ci.result }}" == "failure" ]]; then
            echo "One or more CI jobs failed"
            exit 1
          else
            echo "All CI jobs passed successfully"
          fi